#version 330

layout (location = 0) in vec2 in_pos;
layout (location = 1) in vec4 in_color;
layout (location = 2) in vec2 in_uv;
layout (location = 3) in float in_textureSlot;

uniform mat4 projection_matrix;
uniform mat4 view_matrix = mat4(1.0);
uniform mat4 model_matrix = mat4(1.0);
uniform vec3 ambientColor = vec3(1, 1, 1);

out float textureSlot;
out vec4 color;
out vec2 uv;

vec3 LightModel()
{
    return clamp(ambientColor, 0.0, 1.0);
}

void main() 
{
	// Model * View * Projection -> Matrix
	gl_Position = projection_matrix * view_matrix * model_matrix * vec4(in_pos.x, in_pos.y, 0.0, 1.0);
	
	color = vec4(in_color.rgb * LightModel(), in_color.a);
	uv = in_uv;
	textureSlot = in_textureSlot;
}